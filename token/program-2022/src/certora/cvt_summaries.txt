;; if the call returns then (*i64)(r1+0) is always a valid pointer.
;; 1st call:
;; - precondition: (*i64)(r1+0) is a Rust dangling pointer
;; - post-condition: (*i64)(r1+0) points to new allocated memory (malloc)
;; 2nd call:
;; - precondition: (*i64)(r1+0) is a valid pointer
;; - post-condition: (*i64)(r1+0) points to a new allocated memory after resizing the memory object
;;                   to which r1 pointed to before the call (realloc).
#[type((*i64)(r1+0):ptr_heap)]
^alloc::raw_vec::RawVec<T,A>::reserve_for_push(_[0-9][0-9]*)*$

#[type(r0:ptr_external)]
^CVT_nondet_pointer_decryptable_balance$

#[type(r0:ptr_external)]
^CVT_nondet_pointer_usize$

#[type(r0:ptr_external)]
^CVT_nondet_pointer_withdraw_account_data$

#[type(r0:ptr_external)]
^CVT_nondet_pointer_close_account_data$
